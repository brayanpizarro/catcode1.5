Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement
    3               | statement_list statement

    4 statement: INT_TYPE IDENTIFIER ASSIGN expr ';'
    5          | FLOAT_TYPE IDENTIFIER ASSIGN expr ';'
    6          | BOOL_TYPE IDENTIFIER ASSIGN expr ';'
    7          | IDENTIFIER ASSIGN expr ';'
    8          | if_statement
    9          | PRINT LPAREN IDENTIFIER RPAREN ';'
   10          | PRINT LPAREN STRING RPAREN ';'
   11          | block

   12 block: '{' statement_list '}'

   13 if_statement: IF LPAREN expr RPAREN statement
   14             | IF LPAREN expr RPAREN statement ELSE statement

   15 expr: INT_VAL
   16     | FLOAT_VAL
   17     | BOOL_VAL
   18     | IDENTIFIER
   19     | expr PLUS expr
   20     | expr MINUS expr
   21     | expr TIMES expr
   22     | expr DIVIDE expr
   23     | expr LT expr
   24     | expr GT expr
   25     | expr LE expr
   26     | expr GE expr
   27     | expr AND expr
   28     | expr OR expr
   29     | LPAREN expr RPAREN
   30     | MINUS expr


Terminals, with rules where they appear

    $end (0) 0
    ';' (59) 4 5 6 7 9 10
    '{' (123) 12
    '}' (125) 12
    error (256)
    INT_VAL <ival> (258) 15
    BOOL_VAL <ival> (259) 17
    FLOAT_VAL <fval> (260) 16
    IDENTIFIER <id> (261) 4 5 6 7 9 18
    STRING <id> (262) 10
    PLUS (263) 19
    MINUS (264) 20 30
    TIMES (265) 21
    DIVIDE (266) 22
    LPAREN (267) 9 10 13 14 29
    RPAREN (268) 9 10 13 14 29
    LT (269) 23
    GT (270) 24
    LE (271) 25
    GE (272) 26
    AND (273) 27
    OR (274) 28
    IF (275) 13 14
    ELSE (276) 14
    PRINT (277) 9 10
    ASSIGN (278) 4 5 6 7
    INT_TYPE (279) 4
    FLOAT_TYPE (280) 5
    BOOL_TYPE (281) 6
    UMINUS (282)
    LOWER_THAN_ELSE (283)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    statement_list <stmt> (34)
        on left: 2 3
        on right: 1 3 12
    statement <stmt> (35)
        on left: 4 5 6 7 8 9 10 11
        on right: 2 3 13 14
    block <stmt> (36)
        on left: 12
        on right: 11
    if_statement <stmt> (37)
        on left: 13 14
        on right: 8
    expr <ival> (38)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 4 5 6 7 13 14 19 20 21 22 23 24 25 26 27 28 29 30


State 0

    0 $accept: . program $end

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    PRINT       shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    BOOL_TYPE   shift, and go to state 6
    '{'         shift, and go to state 7

    program         go to state 8
    statement_list  go to state 9
    statement       go to state 10
    block           go to state 11
    if_statement    go to state 12


State 1

    7 statement: IDENTIFIER . ASSIGN expr ';'

    ASSIGN  shift, and go to state 13


State 2

   13 if_statement: IF . LPAREN expr RPAREN statement
   14             | IF . LPAREN expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 14


State 3

    9 statement: PRINT . LPAREN IDENTIFIER RPAREN ';'
   10          | PRINT . LPAREN STRING RPAREN ';'

    LPAREN  shift, and go to state 15


State 4

    4 statement: INT_TYPE . IDENTIFIER ASSIGN expr ';'

    IDENTIFIER  shift, and go to state 16


State 5

    5 statement: FLOAT_TYPE . IDENTIFIER ASSIGN expr ';'

    IDENTIFIER  shift, and go to state 17


State 6

    6 statement: BOOL_TYPE . IDENTIFIER ASSIGN expr ';'

    IDENTIFIER  shift, and go to state 18


State 7

   12 block: '{' . statement_list '}'

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    PRINT       shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    BOOL_TYPE   shift, and go to state 6
    '{'         shift, and go to state 7

    statement_list  go to state 19
    statement       go to state 10
    block           go to state 11
    if_statement    go to state 12


State 8

    0 $accept: program . $end

    $end  shift, and go to state 20


State 9

    1 program: statement_list .
    3 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    PRINT       shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    BOOL_TYPE   shift, and go to state 6
    '{'         shift, and go to state 7

    $default  reduce using rule 1 (program)

    statement     go to state 21
    block         go to state 11
    if_statement  go to state 12


State 10

    2 statement_list: statement .

    $default  reduce using rule 2 (statement_list)


State 11

   11 statement: block .

    $default  reduce using rule 11 (statement)


State 12

    8 statement: if_statement .

    $default  reduce using rule 8 (statement)


State 13

    7 statement: IDENTIFIER ASSIGN . expr ';'

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 28


State 14

   13 if_statement: IF LPAREN . expr RPAREN statement
   14             | IF LPAREN . expr RPAREN statement ELSE statement

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 29


State 15

    9 statement: PRINT LPAREN . IDENTIFIER RPAREN ';'
   10          | PRINT LPAREN . STRING RPAREN ';'

    IDENTIFIER  shift, and go to state 30
    STRING      shift, and go to state 31


State 16

    4 statement: INT_TYPE IDENTIFIER . ASSIGN expr ';'

    ASSIGN  shift, and go to state 32


State 17

    5 statement: FLOAT_TYPE IDENTIFIER . ASSIGN expr ';'

    ASSIGN  shift, and go to state 33


State 18

    6 statement: BOOL_TYPE IDENTIFIER . ASSIGN expr ';'

    ASSIGN  shift, and go to state 34


State 19

    3 statement_list: statement_list . statement
   12 block: '{' statement_list . '}'

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    PRINT       shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    BOOL_TYPE   shift, and go to state 6
    '{'         shift, and go to state 7
    '}'         shift, and go to state 35

    statement     go to state 21
    block         go to state 11
    if_statement  go to state 12


State 20

    0 $accept: program $end .

    $default  accept


State 21

    3 statement_list: statement_list statement .

    $default  reduce using rule 3 (statement_list)


State 22

   15 expr: INT_VAL .

    $default  reduce using rule 15 (expr)


State 23

   17 expr: BOOL_VAL .

    $default  reduce using rule 17 (expr)


State 24

   16 expr: FLOAT_VAL .

    $default  reduce using rule 16 (expr)


State 25

   18 expr: IDENTIFIER .

    $default  reduce using rule 18 (expr)


State 26

   30 expr: MINUS . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 36


State 27

   29 expr: LPAREN . expr RPAREN

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 37


State 28

    7 statement: IDENTIFIER ASSIGN expr . ';'
   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    LT      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    ';'     shift, and go to state 48


State 29

   13 if_statement: IF LPAREN expr . RPAREN statement
   14             | IF LPAREN expr . RPAREN statement ELSE statement
   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    RPAREN  shift, and go to state 49
    LT      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 30

    9 statement: PRINT LPAREN IDENTIFIER . RPAREN ';'

    RPAREN  shift, and go to state 50


State 31

   10 statement: PRINT LPAREN STRING . RPAREN ';'

    RPAREN  shift, and go to state 51


State 32

    4 statement: INT_TYPE IDENTIFIER ASSIGN . expr ';'

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 52


State 33

    5 statement: FLOAT_TYPE IDENTIFIER ASSIGN . expr ';'

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 53


State 34

    6 statement: BOOL_TYPE IDENTIFIER ASSIGN . expr ';'

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 54


State 35

   12 block: '{' statement_list '}' .

    $default  reduce using rule 12 (block)


State 36

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr
   30     | MINUS expr .

    $default  reduce using rule 30 (expr)


State 37

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr
   29     | LPAREN expr . RPAREN

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    RPAREN  shift, and go to state 55
    LT      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 38

   19 expr: expr PLUS . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 56


State 39

   20 expr: expr MINUS . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 57


State 40

   21 expr: expr TIMES . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 58


State 41

   22 expr: expr DIVIDE . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 59


State 42

   23 expr: expr LT . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 60


State 43

   24 expr: expr GT . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 61


State 44

   25 expr: expr LE . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 62


State 45

   26 expr: expr GE . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 63


State 46

   27 expr: expr AND . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 64


State 47

   28 expr: expr OR . expr

    INT_VAL     shift, and go to state 22
    BOOL_VAL    shift, and go to state 23
    FLOAT_VAL   shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAREN      shift, and go to state 27

    expr  go to state 65


State 48

    7 statement: IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 7 (statement)


State 49

   13 if_statement: IF LPAREN expr RPAREN . statement
   14             | IF LPAREN expr RPAREN . statement ELSE statement

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    PRINT       shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    BOOL_TYPE   shift, and go to state 6
    '{'         shift, and go to state 7

    statement     go to state 66
    block         go to state 11
    if_statement  go to state 12


State 50

    9 statement: PRINT LPAREN IDENTIFIER RPAREN . ';'

    ';'  shift, and go to state 67


State 51

   10 statement: PRINT LPAREN STRING RPAREN . ';'

    ';'  shift, and go to state 68


State 52

    4 statement: INT_TYPE IDENTIFIER ASSIGN expr . ';'
   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    LT      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    ';'     shift, and go to state 69


State 53

    5 statement: FLOAT_TYPE IDENTIFIER ASSIGN expr . ';'
   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    LT      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    ';'     shift, and go to state 70


State 54

    6 statement: BOOL_TYPE IDENTIFIER ASSIGN expr . ';'
   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    LT      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    ';'     shift, and go to state 71


State 55

   29 expr: LPAREN expr RPAREN .

    $default  reduce using rule 29 (expr)


State 56

   19 expr: expr . PLUS expr
   19     | expr PLUS expr .
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 19 (expr)


State 57

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   20     | expr MINUS expr .
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 20 (expr)


State 58

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   21     | expr TIMES expr .
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 59

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   22     | expr DIVIDE expr .
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    $default  reduce using rule 22 (expr)


State 60

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   23     | expr LT expr .
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 23 (expr)


State 61

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   24     | expr GT expr .
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 24 (expr)


State 62

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   25     | expr LE expr .
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 25 (expr)


State 63

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   26     | expr GE expr .
   27     | expr . AND expr
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 26 (expr)


State 64

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   27     | expr AND expr .
   28     | expr . OR expr

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    LT      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    GE      shift, and go to state 45

    $default  reduce using rule 27 (expr)


State 65

   19 expr: expr . PLUS expr
   20     | expr . MINUS expr
   21     | expr . TIMES expr
   22     | expr . DIVIDE expr
   23     | expr . LT expr
   24     | expr . GT expr
   25     | expr . LE expr
   26     | expr . GE expr
   27     | expr . AND expr
   28     | expr . OR expr
   28     | expr OR expr .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    LT      shift, and go to state 42
    GT      shift, and go to state 43
    LE      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46

    $default  reduce using rule 28 (expr)


State 66

   13 if_statement: IF LPAREN expr RPAREN statement .
   14             | IF LPAREN expr RPAREN statement . ELSE statement

    ELSE  shift, and go to state 72

    $default  reduce using rule 13 (if_statement)


State 67

    9 statement: PRINT LPAREN IDENTIFIER RPAREN ';' .

    $default  reduce using rule 9 (statement)


State 68

   10 statement: PRINT LPAREN STRING RPAREN ';' .

    $default  reduce using rule 10 (statement)


State 69

    4 statement: INT_TYPE IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 4 (statement)


State 70

    5 statement: FLOAT_TYPE IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 5 (statement)


State 71

    6 statement: BOOL_TYPE IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 6 (statement)


State 72

   14 if_statement: IF LPAREN expr RPAREN statement ELSE . statement

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    PRINT       shift, and go to state 3
    INT_TYPE    shift, and go to state 4
    FLOAT_TYPE  shift, and go to state 5
    BOOL_TYPE   shift, and go to state 6
    '{'         shift, and go to state 7

    statement     go to state 73
    block         go to state 11
    if_statement  go to state 12


State 73

   14 if_statement: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 14 (if_statement)
