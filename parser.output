Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement
    3               | statement_list statement

    4 statement: expr ';'
    5          | IDENTIFIER ASSIGN expr ';'
    6          | if_statement
    7          | PRINT LPAREN expr RPAREN ';'
    8          | PRINT LPAREN STRING RPAREN ';'
    9          | block

   10 block: '{' statement_list '}'

   11 if_statement: IF LPAREN expr RPAREN statement
   12             | IF LPAREN expr RPAREN statement ELSE statement

   13 expr: NUMBER
   14     | IDENTIFIER
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr TIMES expr
   18     | expr DIVIDE expr
   19     | expr LT expr
   20     | expr GT expr
   21     | expr LE expr
   22     | expr GE expr
   23     | expr AND expr
   24     | expr OR expr
   25     | LPAREN expr RPAREN
   26     | MINUS expr


Terminals, with rules where they appear

    $end (0) 0
    ';' (59) 4 5 7 8
    '{' (123) 10
    '}' (125) 10
    error (256)
    NUMBER <num> (258) 13
    IDENTIFIER <id> (259) 5 14
    STRING <id> (260) 8
    PLUS (261) 15
    MINUS (262) 16 26
    TIMES (263) 17
    DIVIDE (264) 18
    LPAREN (265) 7 8 11 12 25
    RPAREN (266) 7 8 11 12 25
    LT (267) 19
    GT (268) 20
    LE (269) 21
    GE (270) 22
    AND (271) 23
    OR (272) 24
    IF (273) 11 12
    ELSE (274) 12
    PRINT (275) 7 8
    ASSIGN (276) 5
    UMINUS (277)
    LOWER_THAN_ELSE (278)


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    program (28)
        on left: 1
        on right: 0
    statement_list <stmt> (29)
        on left: 2 3
        on right: 1 3 10
    statement <stmt> (30)
        on left: 4 5 6 7 8 9
        on right: 2 3 11 12
    block <stmt> (31)
        on left: 10
        on right: 9
    if_statement <stmt> (32)
        on left: 11 12
        on right: 6
    expr <num> (33)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 4 5 7 11 12 15 16 17 18 19 20 21 22 23 24 25 26


State 0

    0 $accept: . program $end

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4
    IF          shift, and go to state 5
    PRINT       shift, and go to state 6
    '{'         shift, and go to state 7

    program         go to state 8
    statement_list  go to state 9
    statement       go to state 10
    block           go to state 11
    if_statement    go to state 12
    expr            go to state 13


State 1

   13 expr: NUMBER .

    $default  reduce using rule 13 (expr)


State 2

    5 statement: IDENTIFIER . ASSIGN expr ';'
   14 expr: IDENTIFIER .

    ASSIGN  shift, and go to state 14

    $default  reduce using rule 14 (expr)


State 3

   26 expr: MINUS . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 16


State 4

   25 expr: LPAREN . expr RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 17


State 5

   11 if_statement: IF . LPAREN expr RPAREN statement
   12             | IF . LPAREN expr RPAREN statement ELSE statement

    LPAREN  shift, and go to state 18


State 6

    7 statement: PRINT . LPAREN expr RPAREN ';'
    8          | PRINT . LPAREN STRING RPAREN ';'

    LPAREN  shift, and go to state 19


State 7

   10 block: '{' . statement_list '}'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4
    IF          shift, and go to state 5
    PRINT       shift, and go to state 6
    '{'         shift, and go to state 7

    statement_list  go to state 20
    statement       go to state 10
    block           go to state 11
    if_statement    go to state 12
    expr            go to state 13


State 8

    0 $accept: program . $end

    $end  shift, and go to state 21


State 9

    1 program: statement_list .
    3 statement_list: statement_list . statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4
    IF          shift, and go to state 5
    PRINT       shift, and go to state 6
    '{'         shift, and go to state 7

    $default  reduce using rule 1 (program)

    statement     go to state 22
    block         go to state 11
    if_statement  go to state 12
    expr          go to state 13


State 10

    2 statement_list: statement .

    $default  reduce using rule 2 (statement_list)


State 11

    9 statement: block .

    $default  reduce using rule 9 (statement)


State 12

    6 statement: if_statement .

    $default  reduce using rule 6 (statement)


State 13

    4 statement: expr . ';'
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26
    LT      shift, and go to state 27
    GT      shift, and go to state 28
    LE      shift, and go to state 29
    GE      shift, and go to state 30
    AND     shift, and go to state 31
    OR      shift, and go to state 32
    ';'     shift, and go to state 33


State 14

    5 statement: IDENTIFIER ASSIGN . expr ';'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 34


State 15

   14 expr: IDENTIFIER .

    $default  reduce using rule 14 (expr)


State 16

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr
   26     | MINUS expr .

    $default  reduce using rule 26 (expr)


State 17

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | LPAREN expr . RPAREN

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26
    RPAREN  shift, and go to state 35
    LT      shift, and go to state 27
    GT      shift, and go to state 28
    LE      shift, and go to state 29
    GE      shift, and go to state 30
    AND     shift, and go to state 31
    OR      shift, and go to state 32


State 18

   11 if_statement: IF LPAREN . expr RPAREN statement
   12             | IF LPAREN . expr RPAREN statement ELSE statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 36


State 19

    7 statement: PRINT LPAREN . expr RPAREN ';'
    8          | PRINT LPAREN . STRING RPAREN ';'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    STRING      shift, and go to state 37
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 38


State 20

    3 statement_list: statement_list . statement
   10 block: '{' statement_list . '}'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4
    IF          shift, and go to state 5
    PRINT       shift, and go to state 6
    '{'         shift, and go to state 7
    '}'         shift, and go to state 39

    statement     go to state 22
    block         go to state 11
    if_statement  go to state 12
    expr          go to state 13


State 21

    0 $accept: program $end .

    $default  accept


State 22

    3 statement_list: statement_list statement .

    $default  reduce using rule 3 (statement_list)


State 23

   15 expr: expr PLUS . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 40


State 24

   16 expr: expr MINUS . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 41


State 25

   17 expr: expr TIMES . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 42


State 26

   18 expr: expr DIVIDE . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 43


State 27

   19 expr: expr LT . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 44


State 28

   20 expr: expr GT . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 45


State 29

   21 expr: expr LE . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 46


State 30

   22 expr: expr GE . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 47


State 31

   23 expr: expr AND . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 48


State 32

   24 expr: expr OR . expr

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 15
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4

    expr  go to state 49


State 33

    4 statement: expr ';' .

    $default  reduce using rule 4 (statement)


State 34

    5 statement: IDENTIFIER ASSIGN expr . ';'
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26
    LT      shift, and go to state 27
    GT      shift, and go to state 28
    LE      shift, and go to state 29
    GE      shift, and go to state 30
    AND     shift, and go to state 31
    OR      shift, and go to state 32
    ';'     shift, and go to state 50


State 35

   25 expr: LPAREN expr RPAREN .

    $default  reduce using rule 25 (expr)


State 36

   11 if_statement: IF LPAREN expr . RPAREN statement
   12             | IF LPAREN expr . RPAREN statement ELSE statement
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26
    RPAREN  shift, and go to state 51
    LT      shift, and go to state 27
    GT      shift, and go to state 28
    LE      shift, and go to state 29
    GE      shift, and go to state 30
    AND     shift, and go to state 31
    OR      shift, and go to state 32


State 37

    8 statement: PRINT LPAREN STRING . RPAREN ';'

    RPAREN  shift, and go to state 52


State 38

    7 statement: PRINT LPAREN expr . RPAREN ';'
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26
    RPAREN  shift, and go to state 53
    LT      shift, and go to state 27
    GT      shift, and go to state 28
    LE      shift, and go to state 29
    GE      shift, and go to state 30
    AND     shift, and go to state 31
    OR      shift, and go to state 32


State 39

   10 block: '{' statement_list '}' .

    $default  reduce using rule 10 (block)


State 40

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26

    $default  reduce using rule 15 (expr)


State 41

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26

    $default  reduce using rule 16 (expr)


State 42

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   17     | expr TIMES expr .
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 43

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   18     | expr DIVIDE expr .
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 44

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   19     | expr LT expr .
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26

    $default  reduce using rule 19 (expr)


State 45

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   20     | expr GT expr .
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26

    $default  reduce using rule 20 (expr)


State 46

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   21     | expr LE expr .
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26

    $default  reduce using rule 21 (expr)


State 47

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   22     | expr GE expr .
   23     | expr . AND expr
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26

    $default  reduce using rule 22 (expr)


State 48

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   23     | expr AND expr .
   24     | expr . OR expr

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26
    LT      shift, and go to state 27
    GT      shift, and go to state 28
    LE      shift, and go to state 29
    GE      shift, and go to state 30

    $default  reduce using rule 23 (expr)


State 49

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . TIMES expr
   18     | expr . DIVIDE expr
   19     | expr . LT expr
   20     | expr . GT expr
   21     | expr . LE expr
   22     | expr . GE expr
   23     | expr . AND expr
   24     | expr . OR expr
   24     | expr OR expr .

    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26
    LT      shift, and go to state 27
    GT      shift, and go to state 28
    LE      shift, and go to state 29
    GE      shift, and go to state 30
    AND     shift, and go to state 31

    $default  reduce using rule 24 (expr)


State 50

    5 statement: IDENTIFIER ASSIGN expr ';' .

    $default  reduce using rule 5 (statement)


State 51

   11 if_statement: IF LPAREN expr RPAREN . statement
   12             | IF LPAREN expr RPAREN . statement ELSE statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4
    IF          shift, and go to state 5
    PRINT       shift, and go to state 6
    '{'         shift, and go to state 7

    statement     go to state 54
    block         go to state 11
    if_statement  go to state 12
    expr          go to state 13


State 52

    8 statement: PRINT LPAREN STRING RPAREN . ';'

    ';'  shift, and go to state 55


State 53

    7 statement: PRINT LPAREN expr RPAREN . ';'

    ';'  shift, and go to state 56


State 54

   11 if_statement: IF LPAREN expr RPAREN statement .
   12             | IF LPAREN expr RPAREN statement . ELSE statement

    ELSE  shift, and go to state 57

    $default  reduce using rule 11 (if_statement)


State 55

    8 statement: PRINT LPAREN STRING RPAREN ';' .

    $default  reduce using rule 8 (statement)


State 56

    7 statement: PRINT LPAREN expr RPAREN ';' .

    $default  reduce using rule 7 (statement)


State 57

   12 if_statement: IF LPAREN expr RPAREN statement ELSE . statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    MINUS       shift, and go to state 3
    LPAREN      shift, and go to state 4
    IF          shift, and go to state 5
    PRINT       shift, and go to state 6
    '{'         shift, and go to state 7

    statement     go to state 58
    block         go to state 11
    if_statement  go to state 12
    expr          go to state 13


State 58

   12 if_statement: IF LPAREN expr RPAREN statement ELSE statement .

    $default  reduce using rule 12 (if_statement)
